openapi: 3.0.3
info:
  title: API Gateway
  description: Документация API Gateway для микросервисной архитектуры
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Локальный сервер разработки
paths:
  /api/register:
    post:
      summary: Регистрация нового пользователя
      description: Создает новый аккаунт пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Некорректные данные запроса
          content:
            text/plain:
              schema:
                type: string
                example: "Username, email, and password are required"
        '409':
          description: Пользователь с таким именем или email уже существует
          content:
            text/plain:
              schema:
                type: string
                example: "User already exists"
  /api/login:
    post:
      summary: Вход пользователя
      description: Аутентифицирует пользователя и возвращает JWT токен
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Некорректные данные запроса
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid request body"
        '401':
          description: Неверные учетные данные
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid credentials"
  /api/profile:
    get:
      summary: Получение профиля пользователя
      description: Возвращает информацию о профиле пользователя
      parameters:
        - name: user_id
          in: query
          description: ID пользователя (опционально)
          required: false
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Некорректный запрос
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Отсутствует токен авторизации
          content:
            text/plain:
              schema:
                type: string
                example: "Authorization token required"
        '404':
          description: Пользователь не найден
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
  /api/update-profile:
    put:
      summary: Обновление профиля пользователя
      description: Обновляет информацию профиля пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Некорректные данные запроса
          content:
            text/plain:
              schema:
                type: string
                example: "No profile data provided for update"
        '401':
          description: Отсутствует токен авторизации
          content:
            text/plain:
              schema:
                type: string
                example: "Authorization token required"
        '404':
          description: Пользователь не найден
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        password:
          type: string
          format: password
          description: Пароль пользователя
    RegisterResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
        username:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        token:
          type: string
          description: JWT токен для аутентификации
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Имя пользователя
        password:
          type: string
          format: password
          description: Пароль пользователя
    LoginResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
        username:
          type: string
          description: Имя пользователя
        token:
          type: string
          description: JWT токен для аутентификации
    UpdateProfileRequest:
      type: object
      properties:
        first_name:
          type: string
          description: Имя пользователя
        last_name:
          type: string
          description: Фамилия пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        phone_number:
          type: string
          description: Телефонный номер пользователя
        birth_date:
          type: string
          format: date-time
          description: Дата рождения пользователя
    ProfileResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
        username:
          type: string
          description: Имя пользователя для входа
        email:
          type: string
          format: email
          description: Email пользователя
        first_name:
          type: string
          description: Имя пользователя
        last_name:
          type: string
          description: Фамилия пользователя
        phone_number:
          type: string
          description: Телефонный номер пользователя
        birth_date:
          type: string
          format: date-time
          description: Дата рождения пользователя
        created_at:
          type: string
          format: date-time
          description: Дата создания профиля
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления профиля
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT